{"title":"Property crimes across Peru","markdown":{"yaml":{"title":"Property crimes across Peru","subtitle":"Analysis of property crimes, specifically focusing on thefts and burglaries, across the 195 provinces of Peru for the years 2018 to 2023","theme":{"light":"flatly","dark":"darkly"},"format":{"html":{"code-fold":true,"code-summary":"Code","code-link":true,"toc":true,"toc-location":"left","toc-title":" ","number-sections":true,"self-contained":true}},"editor":"source","fig-cap-location":"margin","author":{"name":"Joel Belsasar Ccallocunto \n **[luccemhu](https://github.com/luccemhu)**","affiliation":"Pontifical Catholic University of Peru","email":"joel.hucall@gmail.com"},"keywords":"Citizen Security, Urban crime, Victimization","date":"today","description":"This document provides a descriptive analysis of the citizen security module 600 for the years 2022 and 2023, including victimization rates, perception of insecurity, and home burglaries by department.","title-block-banner":"#f0f3f5","title-block-banner-color":"black","css":"style.css","bibliography":"references.bib","csl":"https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl"},"headingText":"Importar shapefile de Lima","containsRefs":false,"markdown":"\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(warning = FALSE, message = FALSE)\n```\n\n\n\n\n```{r}\n#install.packages(c(\"tidyverse\", \"sf\", \"ggplot2\", \"dplyr\"))\nlibrary(tidyverse)\nlibrary(sf)         # Para manipulación de datos espaciales\nlibrary(ggplot2)    # Para visualización de datos\nlibrary(dplyr)      # Para manipulación de datos\nlibrary(magrittr)\nlibrary(viridis)\nlibrary(RColorBrewer)\n\n```\n\n\n```{r}\ndata <- read.csv(\"full_data_2022.csv\", stringsAsFactors = FALSE, fileEncoding = \"latin1\")\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```{r}\n\nlima_districts <- st_read(\"./data-mapas/Distrital INEI 2023 geogpsperu SuyoPomalia.shp\")\n\n# Revisar las estructuras para verificar que las claves coincidan\nhead(data)\nhead(lima_districts)\n```\n\n\n```{r}\n# Filtrar datos para residentes en Lima\ndata_lima <- data %>%\n  filter(DEPARTAMENTO == \"LIMA\")\n\n# Transformar la columna `discriminacion_en_peru` y `trabajo_semana_anterior` en valores numéricos o categóricos.\ndata_lima <- data_lima %>%\n  mutate(discriminacion = as.character(discriminacion_en_peru),\n         trabajo = as.character(trabajo_semana_anterior))\n\n```\n\n\n```{r}\n# Filtrar distritos de Lima en el shapefile\nlima_districts <- lima_districts %>%\n  filter(PROVINCIA == \"LIMA\")\n\n```\n\n```{r}\n# Convertir data_lima a un dataframe estándar si es sf\ndata_lima <- st_drop_geometry(data_lima)\n\n```\n\n```{r}\n# Agregar los datos al mapa\nlima_map_data <- lima_districts %>%\n  left_join(data_lima, by = c(\"DISTRITO\" = \"DISTRITO\"))\n```\n\n\n```{r}\nlima_map_data <- lima_map_data %>%\n  mutate(\n    discriminacion = as.numeric(discriminacion),\n    trabajo = as.numeric(trabajo)\n  )\n\n```\n\n```{r}\nlima_map_data <- lima_map_data %>%\n  mutate(\n    discriminacion = ifelse(is.na(discriminacion), 0, discriminacion),\n    trabajo = ifelse(is.na(trabajo), 0, trabajo)\n  )\n\n```\n\n\n\n\n```{r}\n# Calcular porcentaje de discriminación por distrito\nporcentaje_discriminacion <- lima_map_data %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    si_discriminacion = sum(discriminacion == 1, na.rm = TRUE),\n    porcentaje_discriminacion = (si_discriminacion / total_respuestas) * 100\n  )\n\n# Calcular porcentaje de trabajo por distrito\nporcentaje_trabajo <- lima_map_data %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    si_trabajo = sum(trabajo == 1, na.rm = TRUE),\n    porcentaje_trabajo = (si_trabajo / total_respuestas) * 100\n  )\n\n\n```\n\n```{r}\nporcentaje_discriminacion <- st_drop_geometry(porcentaje_discriminacion)\nporcentaje_trabajo <- st_drop_geometry(porcentaje_trabajo)\n```\n\n\n\n```{r}\n# Unir porcentaje de discriminación\nlima_map_discriminacion <- lima_districts %>%\n  left_join(porcentaje_discriminacion, by = c(\"DISTRITO\" = \"DISTRITO\"))\n\n# Unir porcentaje de trabajo\nlima_map_trabajo <- lima_districts %>%\n  left_join(porcentaje_trabajo, by = c(\"DISTRITO\" = \"DISTRITO\"))\n\n```\n\n\n1. Mapa de Discriminación (Minimalista)\n\n```{r}\nlibrary(cartography)\n\n# Crear una paleta de colores para discriminación\ncols_discriminacion1 <- carto.pal(pal1 = \"green.pal\", n1 = 2, pal2 = \"red.pal\", n2 = 4)\n\np_discriminacion <- ggplot(data = lima_map_discriminacion) +\n  # Capa de los distritos con datos de discriminación\n  geom_sf(aes(fill = porcentaje_discriminacion), color = \"grey50\", size = 0.4) +\n  # Escala de colores perceptualmente uniforme\n  scale_fill_gradientn(\n    colors = cols_discriminacion,\n    name = \"Discriminación (%)\",\n    limits = c(0, 100),\n    breaks = seq(0, 100, by = 20),\n    labels = function(x) paste0(x, \"%\")\n  ) +\n  # Títulos y etiquetas\n  labs(\n    title = \"Porcentaje de discriminación por distrito en Lima Metropolitana\",\n    subtitle = \"Proporción de encuestados que reportaron discriminación\",\n    caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n  ) +\n  # Tema limpio y profesional\n  theme_void(base_size = 16) +  # Elimina cuadrículas y coordenadas\n  theme(\n    plot.title = element_text(face = \"bold\", size = 18, hjust = 0.5),\n    plot.subtitle = element_text(size = 14, hjust = 0.5),\n    plot.caption = element_text(size = 10, color = \"grey40\", hjust = 1),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 7.5)\n  )\n\n```\n\n```{r}\n# Guardar el mapa ya generado en alta calidad\nggsave(\n  filename = \"alta_calidad_mapa_discriminacion.png\",  # Nombre del archivo\n  plot = p_discriminacion1,                           # Objeto del gráfico ya generado\n  dpi = 300,                                         # Resolución en puntos por pulgada\n  width = 10,                                        # Ancho en pulgadas\n  height = 8,                                        # Alto en pulgadas\n  units = \"in\",                                      # Unidades en pulgadas\n  device = \"png\"                                     # Formato del archivo\n)\n\n```\n\n\n\n```{r}\n# Crear una paleta de colores para trabajo\ncols_trabajo <- carto.pal(pal1 = \"blue.pal\", n1 = 3, pal2 = \"orange.pal\", n2 = 3)\n\np_trabajo1 <- ggplot(data = lima_map_trabajo) +\n  # Capa de los distritos con datos de trabajo\n  geom_sf(aes(fill = porcentaje_trabajo), color = \"grey50\", size = 0.4) +\n  # Escala de colores perceptualmente uniforme\n  scale_fill_gradientn(\n    colors = cols_trabajo,\n    name = \"Trabajo (%)\",\n    limits = c(0, 100),\n    breaks = seq(0, 100, by = 20),\n    labels = function(x) paste0(x, \"%\")\n  ) +\n  # Títulos y etiquetas\n  labs(\n    title = \"Porcentaje de trabajo por distrito en Lima\",\n    subtitle = \"Proporción de encuestados que trabajaron la semana anterior\",\n    caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n  ) +\n  # Tema limpio y profesional\n  theme_void(base_size = 16) +  # Elimina cuadrículas y coordenadas\n  theme(\n    plot.title = element_text(face = \"bold\", size = 18, hjust = 0.5),\n    plot.subtitle = element_text(size = 14, hjust = 0.5),\n    plot.caption = element_text(size = 10, color = \"grey40\", hjust = 1),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 7.5)\n  )\n\n```\n\n\n```{r}\n# Guardar el mapa ya generado en alta calidad\nggsave(\n  filename = \"alta_calidad_mapa_trabajo.png\",  # Nombre del archivo\n  plot = p_trabajo1,                           # Objeto del gráfico ya generado\n  dpi = 300,                                         # Resolución en puntos por pulgada\n  width = 10,                                        # Ancho en pulgadas\n  height = 8,                                        # Alto en pulgadas\n  units = \"in\",                                      # Unidades en pulgadas\n  device = \"png\"                                     # Formato del archivo\n)\n\n```\n\n\n```{r}\nfor (distrito in unique(lima_districts$DISTRITO)) {\n  # Filtrar datos para el distrito\n  distrito_data_discriminacion <- lima_map_discriminacion %>%\n    filter(DISTRITO == distrito)\n  \n  distrito_data_trabajo <- lima_map_trabajo %>%\n    filter(DISTRITO == distrito)\n  \n  # Mapa de discriminación por distrito\n  p_discriminacion <- ggplot() +\n    geom_sf(data = distrito_data_discriminacion, aes(fill = porcentaje_discriminacion), color = \"grey50\", size = 0.4) +\n    scale_fill_gradientn(colors = cols_discriminacion, name = \"Discriminación (%)\") +\n    labs(\n      title = paste(\"Discriminación en el distrito:\", distrito),\n      subtitle = \"Proporción de encuestados que reportaron discriminación\",\n      caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n    ) +\n    theme_void(base_size = 14) +\n    theme(\n      plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n      plot.subtitle = element_text(size = 12, hjust = 0.5),\n      legend.position = \"bottom\"\n    )\n  \n  ggsave(paste0(\"discriminacion_\", distrito, \".png\"), p_discriminacion, width = 8, height = 6)\n  \n  # Mapa de trabajo por distrito\n  p_trabajo <- ggplot() +\n    geom_sf(data = distrito_data_trabajo, aes(fill = porcentaje_trabajo), color = \"grey50\", size = 0.4) +\n    scale_fill_gradientn(colors = cols_trabajo, name = \"Trabajo (%)\") +\n    labs(\n      title = paste(\"Trabajo en el distrito:\", distrito),\n      subtitle = \"Proporción de encuestados que trabajaron la semana anterior\",\n      caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n    ) +\n    theme_void(base_size = 14) +\n    theme(\n      plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n      plot.subtitle = element_text(size = 12, hjust = 0.5),\n      legend.position = \"bottom\"\n    )\n  \n  ggsave(paste0(\"trabajo_\", distrito, \".png\"), p_trabajo, width = 8, height = 6)\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n\nCódigo en R para Generar el Gráfico TRABAJO`\n\n```{r}\n# Cargar las librerías necesarias\nlibrary(tidyverse)\n\n# Leer los datos\ndata <- read.csv(\"full_data_2022.csv\", stringsAsFactors = FALSE, fileEncoding = \"latin1\")\n\n```\n\n\n```{r}\n\n# Preparar los datos para \"trabajo\"\ndata <- data %>%\n  mutate(\n    trabajo = as.factor(trabajo_semana_anterior),  # Convertir la columna a factor\n    sexo = ifelse(sexo == 1, \"Hombre\", \"Mujer\")   # Reemplazar valores con etiquetas\n  ) %>%\n  filter(!is.na(trabajo))  # Eliminar filas con NA en \"trabajo\"\n\n# Ajustar niveles para la variable \"trabajo\"\ndata$trabajo <- factor(data$trabajo, levels = c(1, 2), labels = c(\"Trabajó\", \"No trabajó\"))\n\n# Resumir los datos por género y estado de trabajo\ntrabajo_summary <- data %>%\n  group_by(sexo, trabajo) %>%\n  summarise(conteo = n(), .groups = \"drop\") %>%\n  mutate(\n    porcentaje = conteo / sum(conteo) * 100  # Calcular porcentaje por grupo\n  )\n\n# Calcular totales para trabajo (agregar categoría \"Total\")\ntotales_trabajo <- data %>%\n  group_by(trabajo) %>%\n  summarise(\n    conteo = n(),\n    sexo = \"Total\",  # Etiqueta \"Total\"\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    porcentaje = conteo / sum(conteo) * 100  # Calcular porcentaje total\n  )\n\n# Unir los totales al resumen\ntrabajo_summary_total <- trabajo_summary %>%\n  bind_rows(totales_trabajo)\n\n# Crear el gráfico con barras separadas (colores predeterminados de R)\np_trabajo_separado <- ggplot(trabajo_summary_total, aes(x = sexo, y = porcentaje, fill = trabajo)) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.8), color = \"black\", width = 0.7) +  # Barras separadas\n  geom_text(\n    aes(label = sprintf(\"%.1f%%\", porcentaje)),\n    position = position_dodge(width = 0.8),  # Etiquetas encima de las barras separadas\n    vjust = -0.5, size = 4, fontface = \"bold\"\n  ) +\n  labs(\n    title = \"Estado de actividad laboral de la población venezolana en el Perú (2022)\",\n    subtitle = \"Distribución por género y total según estado de actividad laboral\",\n    x = \"Categoría\",\n    y = \"Porcentaje\",\n    caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n    plot.subtitle = element_text(size = 12, hjust = 0.5),\n    plot.caption = element_text(size = 10, color = \"grey40\", hjust = 1),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 10),\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 10),\n    axis.title.x = element_text(size = 12, face = \"bold\"),\n    axis.title.y = element_text(size = 12, face = \"bold\")\n  )\n\n# Mostrar el gráfico\nprint(p_trabajo_separado)\n\n\n\n```\n\n```{r}\n# Guardar el gráfico en alta calidad\nggsave(\n  filename = \"trabajo_estado_barras_separadas_colores.png\",  # Nombre del archivo\n  plot = p_trabajo_separado,                                 # Objeto del gráfico\n  dpi = 300,                                                 # Resolución en puntos por pulgada\n  width = 10,                                                # Ancho en pulgadas\n  height = 8,                                                # Alto en pulgadas\n  units = \"in\",                                              # Unidades en pulgadas\n  device = \"png\"                                             # Formato del archivo\n)\n\n```\n\n\n","srcMarkdownNoYaml":"\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(warning = FALSE, message = FALSE)\n```\n\n\n\n\n```{r}\n#install.packages(c(\"tidyverse\", \"sf\", \"ggplot2\", \"dplyr\"))\nlibrary(tidyverse)\nlibrary(sf)         # Para manipulación de datos espaciales\nlibrary(ggplot2)    # Para visualización de datos\nlibrary(dplyr)      # Para manipulación de datos\nlibrary(magrittr)\nlibrary(viridis)\nlibrary(RColorBrewer)\n\n```\n\n\n```{r}\ndata <- read.csv(\"full_data_2022.csv\", stringsAsFactors = FALSE, fileEncoding = \"latin1\")\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```{r}\n\n# Importar shapefile de Lima\nlima_districts <- st_read(\"./data-mapas/Distrital INEI 2023 geogpsperu SuyoPomalia.shp\")\n\n# Revisar las estructuras para verificar que las claves coincidan\nhead(data)\nhead(lima_districts)\n```\n\n\n```{r}\n# Filtrar datos para residentes en Lima\ndata_lima <- data %>%\n  filter(DEPARTAMENTO == \"LIMA\")\n\n# Transformar la columna `discriminacion_en_peru` y `trabajo_semana_anterior` en valores numéricos o categóricos.\ndata_lima <- data_lima %>%\n  mutate(discriminacion = as.character(discriminacion_en_peru),\n         trabajo = as.character(trabajo_semana_anterior))\n\n```\n\n\n```{r}\n# Filtrar distritos de Lima en el shapefile\nlima_districts <- lima_districts %>%\n  filter(PROVINCIA == \"LIMA\")\n\n```\n\n```{r}\n# Convertir data_lima a un dataframe estándar si es sf\ndata_lima <- st_drop_geometry(data_lima)\n\n```\n\n```{r}\n# Agregar los datos al mapa\nlima_map_data <- lima_districts %>%\n  left_join(data_lima, by = c(\"DISTRITO\" = \"DISTRITO\"))\n```\n\n\n```{r}\nlima_map_data <- lima_map_data %>%\n  mutate(\n    discriminacion = as.numeric(discriminacion),\n    trabajo = as.numeric(trabajo)\n  )\n\n```\n\n```{r}\nlima_map_data <- lima_map_data %>%\n  mutate(\n    discriminacion = ifelse(is.na(discriminacion), 0, discriminacion),\n    trabajo = ifelse(is.na(trabajo), 0, trabajo)\n  )\n\n```\n\n\n\n\n```{r}\n# Calcular porcentaje de discriminación por distrito\nporcentaje_discriminacion <- lima_map_data %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    si_discriminacion = sum(discriminacion == 1, na.rm = TRUE),\n    porcentaje_discriminacion = (si_discriminacion / total_respuestas) * 100\n  )\n\n# Calcular porcentaje de trabajo por distrito\nporcentaje_trabajo <- lima_map_data %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    si_trabajo = sum(trabajo == 1, na.rm = TRUE),\n    porcentaje_trabajo = (si_trabajo / total_respuestas) * 100\n  )\n\n\n```\n\n```{r}\nporcentaje_discriminacion <- st_drop_geometry(porcentaje_discriminacion)\nporcentaje_trabajo <- st_drop_geometry(porcentaje_trabajo)\n```\n\n\n\n```{r}\n# Unir porcentaje de discriminación\nlima_map_discriminacion <- lima_districts %>%\n  left_join(porcentaje_discriminacion, by = c(\"DISTRITO\" = \"DISTRITO\"))\n\n# Unir porcentaje de trabajo\nlima_map_trabajo <- lima_districts %>%\n  left_join(porcentaje_trabajo, by = c(\"DISTRITO\" = \"DISTRITO\"))\n\n```\n\n\n1. Mapa de Discriminación (Minimalista)\n\n```{r}\nlibrary(cartography)\n\n# Crear una paleta de colores para discriminación\ncols_discriminacion1 <- carto.pal(pal1 = \"green.pal\", n1 = 2, pal2 = \"red.pal\", n2 = 4)\n\np_discriminacion <- ggplot(data = lima_map_discriminacion) +\n  # Capa de los distritos con datos de discriminación\n  geom_sf(aes(fill = porcentaje_discriminacion), color = \"grey50\", size = 0.4) +\n  # Escala de colores perceptualmente uniforme\n  scale_fill_gradientn(\n    colors = cols_discriminacion,\n    name = \"Discriminación (%)\",\n    limits = c(0, 100),\n    breaks = seq(0, 100, by = 20),\n    labels = function(x) paste0(x, \"%\")\n  ) +\n  # Títulos y etiquetas\n  labs(\n    title = \"Porcentaje de discriminación por distrito en Lima Metropolitana\",\n    subtitle = \"Proporción de encuestados que reportaron discriminación\",\n    caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n  ) +\n  # Tema limpio y profesional\n  theme_void(base_size = 16) +  # Elimina cuadrículas y coordenadas\n  theme(\n    plot.title = element_text(face = \"bold\", size = 18, hjust = 0.5),\n    plot.subtitle = element_text(size = 14, hjust = 0.5),\n    plot.caption = element_text(size = 10, color = \"grey40\", hjust = 1),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 7.5)\n  )\n\n```\n\n```{r}\n# Guardar el mapa ya generado en alta calidad\nggsave(\n  filename = \"alta_calidad_mapa_discriminacion.png\",  # Nombre del archivo\n  plot = p_discriminacion1,                           # Objeto del gráfico ya generado\n  dpi = 300,                                         # Resolución en puntos por pulgada\n  width = 10,                                        # Ancho en pulgadas\n  height = 8,                                        # Alto en pulgadas\n  units = \"in\",                                      # Unidades en pulgadas\n  device = \"png\"                                     # Formato del archivo\n)\n\n```\n\n\n\n```{r}\n# Crear una paleta de colores para trabajo\ncols_trabajo <- carto.pal(pal1 = \"blue.pal\", n1 = 3, pal2 = \"orange.pal\", n2 = 3)\n\np_trabajo1 <- ggplot(data = lima_map_trabajo) +\n  # Capa de los distritos con datos de trabajo\n  geom_sf(aes(fill = porcentaje_trabajo), color = \"grey50\", size = 0.4) +\n  # Escala de colores perceptualmente uniforme\n  scale_fill_gradientn(\n    colors = cols_trabajo,\n    name = \"Trabajo (%)\",\n    limits = c(0, 100),\n    breaks = seq(0, 100, by = 20),\n    labels = function(x) paste0(x, \"%\")\n  ) +\n  # Títulos y etiquetas\n  labs(\n    title = \"Porcentaje de trabajo por distrito en Lima\",\n    subtitle = \"Proporción de encuestados que trabajaron la semana anterior\",\n    caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n  ) +\n  # Tema limpio y profesional\n  theme_void(base_size = 16) +  # Elimina cuadrículas y coordenadas\n  theme(\n    plot.title = element_text(face = \"bold\", size = 18, hjust = 0.5),\n    plot.subtitle = element_text(size = 14, hjust = 0.5),\n    plot.caption = element_text(size = 10, color = \"grey40\", hjust = 1),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 7.5)\n  )\n\n```\n\n\n```{r}\n# Guardar el mapa ya generado en alta calidad\nggsave(\n  filename = \"alta_calidad_mapa_trabajo.png\",  # Nombre del archivo\n  plot = p_trabajo1,                           # Objeto del gráfico ya generado\n  dpi = 300,                                         # Resolución en puntos por pulgada\n  width = 10,                                        # Ancho en pulgadas\n  height = 8,                                        # Alto en pulgadas\n  units = \"in\",                                      # Unidades en pulgadas\n  device = \"png\"                                     # Formato del archivo\n)\n\n```\n\n\n```{r}\nfor (distrito in unique(lima_districts$DISTRITO)) {\n  # Filtrar datos para el distrito\n  distrito_data_discriminacion <- lima_map_discriminacion %>%\n    filter(DISTRITO == distrito)\n  \n  distrito_data_trabajo <- lima_map_trabajo %>%\n    filter(DISTRITO == distrito)\n  \n  # Mapa de discriminación por distrito\n  p_discriminacion <- ggplot() +\n    geom_sf(data = distrito_data_discriminacion, aes(fill = porcentaje_discriminacion), color = \"grey50\", size = 0.4) +\n    scale_fill_gradientn(colors = cols_discriminacion, name = \"Discriminación (%)\") +\n    labs(\n      title = paste(\"Discriminación en el distrito:\", distrito),\n      subtitle = \"Proporción de encuestados que reportaron discriminación\",\n      caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n    ) +\n    theme_void(base_size = 14) +\n    theme(\n      plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n      plot.subtitle = element_text(size = 12, hjust = 0.5),\n      legend.position = \"bottom\"\n    )\n  \n  ggsave(paste0(\"discriminacion_\", distrito, \".png\"), p_discriminacion, width = 8, height = 6)\n  \n  # Mapa de trabajo por distrito\n  p_trabajo <- ggplot() +\n    geom_sf(data = distrito_data_trabajo, aes(fill = porcentaje_trabajo), color = \"grey50\", size = 0.4) +\n    scale_fill_gradientn(colors = cols_trabajo, name = \"Trabajo (%)\") +\n    labs(\n      title = paste(\"Trabajo en el distrito:\", distrito),\n      subtitle = \"Proporción de encuestados que trabajaron la semana anterior\",\n      caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n    ) +\n    theme_void(base_size = 14) +\n    theme(\n      plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n      plot.subtitle = element_text(size = 12, hjust = 0.5),\n      legend.position = \"bottom\"\n    )\n  \n  ggsave(paste0(\"trabajo_\", distrito, \".png\"), p_trabajo, width = 8, height = 6)\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n\nCódigo en R para Generar el Gráfico TRABAJO`\n\n```{r}\n# Cargar las librerías necesarias\nlibrary(tidyverse)\n\n# Leer los datos\ndata <- read.csv(\"full_data_2022.csv\", stringsAsFactors = FALSE, fileEncoding = \"latin1\")\n\n```\n\n\n```{r}\n\n# Preparar los datos para \"trabajo\"\ndata <- data %>%\n  mutate(\n    trabajo = as.factor(trabajo_semana_anterior),  # Convertir la columna a factor\n    sexo = ifelse(sexo == 1, \"Hombre\", \"Mujer\")   # Reemplazar valores con etiquetas\n  ) %>%\n  filter(!is.na(trabajo))  # Eliminar filas con NA en \"trabajo\"\n\n# Ajustar niveles para la variable \"trabajo\"\ndata$trabajo <- factor(data$trabajo, levels = c(1, 2), labels = c(\"Trabajó\", \"No trabajó\"))\n\n# Resumir los datos por género y estado de trabajo\ntrabajo_summary <- data %>%\n  group_by(sexo, trabajo) %>%\n  summarise(conteo = n(), .groups = \"drop\") %>%\n  mutate(\n    porcentaje = conteo / sum(conteo) * 100  # Calcular porcentaje por grupo\n  )\n\n# Calcular totales para trabajo (agregar categoría \"Total\")\ntotales_trabajo <- data %>%\n  group_by(trabajo) %>%\n  summarise(\n    conteo = n(),\n    sexo = \"Total\",  # Etiqueta \"Total\"\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    porcentaje = conteo / sum(conteo) * 100  # Calcular porcentaje total\n  )\n\n# Unir los totales al resumen\ntrabajo_summary_total <- trabajo_summary %>%\n  bind_rows(totales_trabajo)\n\n# Crear el gráfico con barras separadas (colores predeterminados de R)\np_trabajo_separado <- ggplot(trabajo_summary_total, aes(x = sexo, y = porcentaje, fill = trabajo)) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.8), color = \"black\", width = 0.7) +  # Barras separadas\n  geom_text(\n    aes(label = sprintf(\"%.1f%%\", porcentaje)),\n    position = position_dodge(width = 0.8),  # Etiquetas encima de las barras separadas\n    vjust = -0.5, size = 4, fontface = \"bold\"\n  ) +\n  labs(\n    title = \"Estado de actividad laboral de la población venezolana en el Perú (2022)\",\n    subtitle = \"Distribución por género y total según estado de actividad laboral\",\n    x = \"Categoría\",\n    y = \"Porcentaje\",\n    caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n    plot.subtitle = element_text(size = 12, hjust = 0.5),\n    plot.caption = element_text(size = 10, color = \"grey40\", hjust = 1),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 10),\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 10),\n    axis.title.x = element_text(size = 12, face = \"bold\"),\n    axis.title.y = element_text(size = 12, face = \"bold\")\n  )\n\n# Mostrar el gráfico\nprint(p_trabajo_separado)\n\n\n\n```\n\n```{r}\n# Guardar el gráfico en alta calidad\nggsave(\n  filename = \"trabajo_estado_barras_separadas_colores.png\",  # Nombre del archivo\n  plot = p_trabajo_separado,                                 # Objeto del gráfico\n  dpi = 300,                                                 # Resolución en puntos por pulgada\n  width = 10,                                                # Ancho en pulgadas\n  height = 8,                                                # Alto en pulgadas\n  units = \"in\",                                              # Unidades en pulgadas\n  device = \"png\"                                             # Formato del archivo\n)\n\n```\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["style.css"],"toc":true,"number-sections":true,"self-contained":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","title":"Property crimes across Peru","subtitle":"Analysis of property crimes, specifically focusing on thefts and burglaries, across the 195 provinces of Peru for the years 2018 to 2023","theme":{"light":"flatly","dark":"darkly"},"editor":"source","fig-cap-location":"margin","author":{"name":"Joel Belsasar Ccallocunto \n **[luccemhu](https://github.com/luccemhu)**","affiliation":"Pontifical Catholic University of Peru","email":"joel.hucall@gmail.com"},"keywords":"Citizen Security, Urban crime, Victimization","date":"today","description":"This document provides a descriptive analysis of the citizen security module 600 for the years 2022 and 2023, including victimization rates, perception of insecurity, and home burglaries by department.","title-block-banner":"#f0f3f5","title-block-banner-color":"black","bibliography":["references.bib"],"csl":"https://raw.githubusercontent.com/citation-style-language/styles/master/apa.csl","code-summary":"Code","toc-location":"left","toc-title":" "},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}