{"title":"Factores asociados al estado de actividad laboral en refugiados y migrantes venezolanos en el Perú: Un enfoque predictivo utilizando Machine Learning","markdown":{"yaml":{"title":"Factores asociados al estado de actividad laboral en refugiados y migrantes venezolanos en el Perú: Un enfoque predictivo utilizando Machine Learning","format":{"dashboard":{"theme":["litera","custom.scss"],"orientation":"columns"}},"logo":"logo.png","execute":{"echo":false}},"headingText":"Análisis principal","containsRefs":false,"markdown":"\n\n\n## Column {.tabset}\n\n### Introducción y estado de actividad laboral\n\n#### Column {.tabset}\n\n##### Introducción\n\n###### Column {width=\"10%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; border-left: 4px solid #009688; padding: 1em; margin-bottom: 1em;\"}\n**1 078 854**  \n**Personas venezolanas en el Perú en 2022.**\n:::\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; border-left: 4px solid #009688; padding: 1em; margin-bottom: 1em;\"}\n**41%**  \n**Incremento en la población migrante venezolana desde 2018.**\n:::\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; border-left: 4px solid #009688; padding: 1em; margin-bottom: 1em;\"}\n**82.5%**  \n**Migrantes concentrados en Lima y Callao.**\n:::\n\n###### Column {width=\"75%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #222222; padding: 1em; border-radius: 4px; box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\"}\n\n![Gráfico Nº1: Concentración de refugiados y migrantes venezolanos en ciudades del Perú (2018-2022)](./imagenes/1-Imagen1.png){fig-align=\"center\" width=\"100%\"}\n\n:::\n\n###### Column {width=\"25%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; padding: 1em; border-left: 4px solid #009688;\"}\n\nEl Perú albergó a **1,078,854 personas venezolanas** en 2022, un incremento del **41%** desde 2018.  \nLas ciudades con mayor concentración fueron:\n\n- **Lima y Callao**: 82.5%  \n- **Trujillo**: 5.1%  \n- **Arequipa**: 3.3%  \n- **Piura**: 2.2%  \n\nEste gráfico destaca el impacto de la migración venezolana en las principales áreas urbanas, con Lima y Callao como los destinos predominantes.\n\n:::\n\n##### Estado de actividad laboral\n\n###### Column {width=\"75%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #222222; padding: 1em; border-radius: 4px; box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\"}\n\n![Gráfico Nº2. Población refugiada y migrante de Venezuela en el Perú, según estado de actividad laboral en el 2022](./imagenes/2-Imagen2.png){fig-align=\"center\" width=\"100%\"}\n\n:::\n\n###### Column {width=\"25%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; padding: 1em; border-left: 4px solid #009688;\"}\n\nEl **58.5%** de la población refugiada y migrante venezolana en el Perú participó en actividades laborales durante el período evaluado, destacando su integración parcial al mercado laboral peruano.  \nEl 41.5% de los migrantes venezolanos en Perú no encontró trabajo o no participó en actividades laborales durante el período evaluado.\n\n:::\n\n\n\n### Investigación y revisión de literatura\n\n#### Column {.tabset}\n\n##### Preguntas de investigación\n\n::: {.valuebox style=\"background-color: #e8f5e9; color: #1b5e20; border-left: 4px solid #43a047; padding: 1em; margin-bottom: 1em;\"}\n\n1.**¿Cuál es el modelo de Machine Learning que mejor predice el estado de actividad laboral en refugiados y migrantes venezolanos en el Perú en 2022?**\n\n2.**¿Cuáles son las características más importantes asociadas al estado de actividad laboral en refugiados y migrantes venezolanos en el Perú en 2022?**\n\n:::\n\n##### Revisión de la literatura\n\n::: {.valuebox style=\"background-color: #e8f5e9; color: #1b5e20; border-left: 4px solid #43a047; padding: 1em; margin-bottom: 1em;\"}\n\n1. **Estudios cualitativos y econométricos** han identificado barreras como:\n\n   - Redes de contacto limitadas.  \n   - Obstáculos para la validación de títulos (Távarez y Alcázar, 2023).  \n\n2. **Barreras para la integración en LATAM y Perú**:  \n\n   - Representaciones negativas en medios (ACNUR, 2023).  \n   - Obstáculos legales para la integración económica (Alcázar y Távarez, 2023).  \n   - Falta de acceso a empleo y condiciones de vida adecuadas (INEI, 2023).  \n\n3. **Predicción de abandono laboral con Machine Learning**:  \n\n   - Métodos basados en **árboles de decisión** han demostrado ser los más efectivos (Jiménez, 2023).\n\n:::\n\n##### Relevancia de la investigación\n\n::: {.valuebox style=\"background-color: #e8f5e9; color: #1b5e20; border-left: 4px solid #43a047; padding: 1em; margin-bottom: 1em;\"}\n\n1. **Teórico I**: \n\nAplicación de Machine Learning para identificar la situación laboral.  \n\n2. **Teórico II**: \n\nAnálisis profundo de factores asociados al estado de actividad laboral, evaluando **806 variables** (individuo, infraestructura, distrito).  \n\n**Impacto práctico**:  \n- Focalización en políticas públicas.  \n- Programas específicos para necesidades migrantes.  \n- Mejora de la inclusión laboral y económica.\n\n:::\n\n\n\n\n```{r, include=FALSE}\n# Cargar bibliotecas necesarias\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggplot2)\n\n# Leer datos y shapefile\ndata <- read.csv(\"full_data_2022.csv\", stringsAsFactors = FALSE, fileEncoding = \"latin1\")\nlima_districts <- st_read(\"./mapas/data-mapas/Distrital INEI 2023 geogpsperu SuyoPomalia.shp\")\n\n# Filtrar y procesar datos\ndata_lima <- data %>%\n  filter(DEPARTAMENTO == \"LIMA\") %>%\n  mutate(trabajo = as.numeric(as.character(trabajo_semana_anterior)))\n\nporcentaje_trabajo <- data_lima %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    si_trabajo = sum(trabajo == 1, na.rm = TRUE),\n    porcentaje_trabajo = (si_trabajo / total_respuestas) * 100\n  )\n\nlima_districts <- lima_districts %>%\n  filter(PROVINCIA == \"LIMA\") %>%\n  left_join(porcentaje_trabajo, by = c(\"DISTRITO\" = \"DISTRITO\")) %>%\n  mutate(porcentaje_trabajo = ifelse(is.na(porcentaje_trabajo), 0, porcentaje_trabajo))\n```\n\n\n\n\n# Mapas\n\n#### Column {.tabset}\n\n##### Mapa General de Trabajo\n\n###### Column {width=\"100%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #222222; padding: 1em; border-radius: 4px; box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\"}\n\n```{r mapaGeneralTrabajo, echo=FALSE}\n\n\n# Mejorar el mapa para artículos científicos\nggplot(data = lima_districts) +\n  geom_sf(aes(fill = porcentaje_trabajo), color = \"black\", size = 0.3) + # Líneas negras más delgadas\n  scale_fill_gradientn(\n    colors = c(\"#d9f0a3\", \"#addd8e\", \"#78c679\", \"#41ab5d\", \"#238443\", \"#005a32\"), # Escala de verdes profesionales\n    name = \"Trabajo (%)\",\n    limits = c(0, 100),\n    breaks = seq(0, 100, by = 20), # Divisiones claras\n    labels = function(x) paste0(x, \"%\") # Etiquetas con porcentaje\n  ) +\n  labs(\n    title = \"Porcentaje de trabajo por distrito en Lima\",\n    subtitle = \"Proporción de encuestados que trabajaron la semana anterior\",\n    caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n  ) +\n  theme_minimal(base_size = 14) + # Tema limpio y adecuado para publicaciones\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5), # Títulos más destacados\n    plot.subtitle = element_text(size = 12, hjust = 0.5, color = \"grey20\"), # Subtítulos claros\n    plot.caption = element_text(size = 10, color = \"grey40\", hjust = 1), # Fuente y contexto\n    legend.position = \"bottom\", # Leyenda en la parte inferior\n    legend.title = element_text(size = 12, face = \"bold\"), # Título de la leyenda destacado\n    legend.text = element_text(size = 7.5), # Texto de leyenda legible\n    axis.text = element_blank(), # Eliminar texto de ejes\n    axis.title = element_blank(), # Eliminar títulos de ejes\n    panel.grid = element_blank(), # Quitar cuadrículas para limpieza\n    panel.background = element_rect(fill = \"white\", color = NA) # Fondo blanco limpio\n  )\n```\n\n:::\n\n##### Mapas distritos de Lima Metropolitana\n\n###### Column {.tabset}\n\n```{r mapasPorDistrito, echo=FALSE}\n\nlibrary(dplyr)\n\n# Loop para generar mapas por distrito con diseño profesional\nfor (distrito in unique(lima_districts$DISTRITO)) {\n  distrito_data <- lima_districts %>%\n    filter(DISTRITO == distrito)\n  \n  # Generar un mapa profesional por cada distrito\n  p <- ggplot(data = distrito_data) +\n    geom_sf(aes(fill = porcentaje_trabajo), color = \"black\", size = 0.3) + # Borde negro para definición\n    scale_fill_gradientn(\n      colors = c(\"#d9f0a3\", \"#addd8e\", \"#78c679\", \"#41ab5d\", \"#238443\", \"#005a32\"), # Escala perceptible\n      name = \"Porcentaje de trabajo (%)\",\n      limits = c(0, 100),\n      breaks = seq(0, 100, by = 20), # Límites claros y proporcionales\n      labels = function(x) paste0(x, \"%\")\n    ) +\n    labs(\n      title = paste(\"Trabajo en el distrito:\", distrito),\n      subtitle = \"Proporción de encuestados que trabajaron la semana anterior\",\n      caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n    ) +\n    theme_minimal(base_size = 14) + # Tema más adecuado para publicaciones científicas\n    theme(\n      plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5), # Título centrado y prominente\n      plot.subtitle = element_text(size = 12, hjust = 0.5, color = \"grey20\"), # Subtítulo legible\n      plot.caption = element_text(size = 10, color = \"grey40\", hjust = 1), # Fuente y contexto\n      axis.text = element_blank(), # Quitar texto de ejes\n      axis.title = element_blank(), # Quitar títulos de ejes\n      panel.grid = element_blank(), # Eliminar cuadrícula\n      panel.background = element_rect(fill = \"white\", color = NA), # Fondo blanco para claridad\n      legend.position = \"bottom\", # Leyenda en la parte inferior\n      legend.title = element_text(size = 12, face = \"bold\"), # Título de la leyenda destacado\n      legend.text = element_text(size = 7.5) # Texto de leyenda legible\n    )\n  \n  # Renderizar cada mapa en su propia subpestaña\n  cat(paste0(\" \", distrito, \"\\n\"))\n  print(p)\n}\n```\n\n\n##### Clasificación del trabajo\n\n###### Column {.tabset}\n\n\n\n```{r, echo=FALSE, echo=FALSE}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(classInt)\n# Generar los puntos de corte únicos para los cuantiles\nbreaks <- unique(classIntervals(lima_districts$porcentaje_trabajo, n = 5, style = \"quantile\")$brks)\n\n# Verificar el número de intervalos y etiquetas\nnum_intervals <- length(breaks) - 1  # Número de intervalos es siempre número de cortes menos 1\n\n# Asegúrate de que las etiquetas coincidan con el número de intervalos\nlabels <- c(\"muy bajo\", \"bajo\", \"medio\", \"alto\", \"muy alto\")[1:num_intervals]\n\n# Clasificar los distritos según porcentaje de trabajo\nlima_districts$trabajo_cat <- cut(\n  lima_districts$porcentaje_trabajo,\n  breaks = breaks,\n  include.lowest = TRUE,\n  labels = labels\n)\n\n```\n\n#### Distritos con trabajo muy bajo\n\n\n```{r, echo=FALSE}\n# Generar el mapa para distritos con trabajo muy bajo\nggplot() +\n  geom_sf(\n    data = lima_districts %>% filter(trabajo_cat != \"muy bajo\"),\n    aes(geometry = geometry),\n    fill = \"grey90\",\n    color = \"white\"\n  ) +\n  geom_sf(\n    data = lima_districts %>% filter(trabajo_cat == \"muy bajo\"),\n    aes(fill = trabajo_cat, geometry = geometry),\n    color = \"black\"\n  ) +\n  scale_fill_manual(values = c(\"muy bajo\" = \"red\")) +\n  labs(\n    title = \"Distritos con trabajo muy bajo\",\n    subtitle = \"Porcentaje de personas que trabajaron la semana anterior\",\n    caption = \"Fuente: ENPOVE 2022\"\n  ) +\n  theme_void()\n```\n\n#### Distritos con trabajo muy alto\n\n```{r, echo=FALSE}\n# Generar el mapa para distritos con trabajo muy alto\nggplot() +\n  geom_sf(\n    data = lima_districts %>% filter(trabajo_cat != \"muy alto\"),\n    aes(geometry = geometry),\n    fill = \"grey90\",\n    color = \"white\"\n  ) +\n  geom_sf(\n    data = lima_districts %>% filter(trabajo_cat == \"muy alto\"),\n    aes(fill = trabajo_cat, geometry = geometry),\n    color = \"black\"\n  ) +\n  scale_fill_manual(values = c(\"muy alto\" = \"blue\")) +\n  labs(\n    title = \"Distritos con trabajo muy alto\",\n    subtitle = \"Porcentaje de personas que trabajaron la semana anterior\",\n    caption = \"Fuente: ENPOVE 2022\"\n  ) +\n  theme_void()\n```\n\n\n\n\n# Spatial II\n\n#### Column {.tabset}\n\n##### Mapa General de Trabajo\n\n###### Column {width=\"100%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #222222; padding: 1em; border-radius: 4px; box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\"}\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Cargar bibliotecas necesarias\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(ggplot2)\n\n# # Leer datos y shapefile\n# data <- read.csv(\"full_data_2022.csv\", stringsAsFactors = FALSE, fileEncoding = \"latin1\")\n# lima_districts <- st_read(\"./mapas/data-mapas/Distrital INEI 2023 geogpsperu SuyoPomalia.shp\")\n# \n# # Procesar datos\n# data_lima <- data %>%\n#   filter(DEPARTAMENTO == \"LIMA\") %>%\n#   mutate(trabajo = as.numeric(as.character(trabajo_semana_anterior)))\n# \n# porcentaje_trabajo <- data_lima %>%\n#   group_by(DISTRITO) %>%\n#   summarise(\n#     total_respuestas = n(),\n#     si_trabajo = sum(trabajo == 1, na.rm = TRUE),\n#     porcentaje_trabajo = (si_trabajo / total_respuestas) * 100\n#   )\n# \n# lima_districts <- lima_districts %>%\n#   filter(PROVINCIA == \"LIMA\") %>%\n#   left_join(porcentaje_trabajo, by = c(\"DISTRITO\" = \"DISTRITO\")) %>%\n#   mutate(porcentaje_trabajo = ifelse(is.na(porcentaje_trabajo), 0, porcentaje_trabajo))\n\n# Calcular matriz de pesos espaciales (Reina)\nw <- poly2nb(lima_districts, queen = TRUE)\nw_list <- nb2listw(w, style = \"W\", zero.policy = TRUE)\n\n# Calcular Moran's I Global\nmoran_global <- moran.test(lima_districts$porcentaje_trabajo, listw = w_list, zero.policy = TRUE)\n\n# Imprimir resultados de Moran's I Global\nmoran_global\n\n# Calcular Moran's I Local (LISA)\nlocal_moran <- localmoran(lima_districts$porcentaje_trabajo, listw = w_list, zero.policy = TRUE)\n\n# Agregar resultados al shapefile\nlima_districts <- lima_districts %>%\n  mutate(\n    LISA_I = local_moran[, 1],\n    LISA_p = local_moran[, 5],\n    LISA_cluster = case_when(\n      LISA_I > 0 & LISA_p <= 0.05 ~ \"Cluster Alto-Alto\",\n      LISA_I < 0 & LISA_p <= 0.05 ~ \"Cluster Bajo-Bajo\",\n      LISA_I > 0 & LISA_p > 0.05 ~ \"Sin Significancia\",\n      TRUE ~ \"Sin Cluster\"\n    )\n  )\n\n# Mapa de Moran's I Local\nggplot(data = lima_districts) +\n  geom_sf(aes(fill = LISA_cluster), color = \"white\") +\n  scale_fill_manual(\n    values = c(\n      \"Cluster Alto-Alto\" = \"red\",\n      \"Cluster Bajo-Bajo\" = \"blue\",\n      \"Sin Cluster\" = \"grey\",\n      \"Sin Significancia\" = \"yellow\"\n    ),\n    na.value = \"white\"\n  ) +\n  labs(\n    title = \"Clusters espaciales: proporción de personas que trabajaron\",\n    subtitle = \"Análisis local de Moran's I (LISA)\",\n    fill = \"Clusters LISA\"\n  ) +\n  theme_void()\n```\n\n:::\n\n\n\n\n# Metodología\n\n## Column {.tabset}\n\n### V. METODOLOGÍA (1): BASE DE DATOS\n\n::: {.valuebox color=\"white\"}\n#### Metodología de Procesamiento\n\n1. **Metodología:**\n   - **Filtro de missings**: Variables con más del 10% de valores faltantes fueron eliminadas.\n\n2. **Resumen de la Base de Datos**:\n   \n   | Año  | Fuentes                | Número de Observaciones                                    | Número de Variables |\n   |------|-------------------------|-----------------------------------------------------------|---------------------|\n   | 2022 | ENPOVE, RENAMU, SIAF   | 10,227 refugiados o migrantes venezolanos en Perú (90%) | 806                 |\n\n3. **Filtros Adicionales**:\n   - Filtro de variabilidad: Eliminación de variables constantes.\n   - Imputación con **media** y **moda**.\n   - Tratamiento de **outliers**.\n\n4. **Metodología Avanzada**:\n   - Métodos de limpieza y **fuzzy merge** aplicados para garantizar calidad en los datos.\n:::\n\n\n\n### V. METODOLOGÍA (2): VARIABLE DEPENDIENTE\n\n::: {.valuebox color=\"white\"}\n#### Definición de la Variable Dependiente\n\n- **Pregunta:** La semana pasada del ___ al ___, ¿tuvo algún trabajo (sin contar los quehaceres del hogar)?\n  - Opciones:\n    1. **Sí**\n    2. **No**\n\n#### Estrategias de Resampling\n\n- **Métodos Aplicados:**\n  1. **SMOTE TOMEK**: Combina oversampling y undersampling para balancear clases.\n  2. **SMOTE**: Sobremuestreo de la clase minoritaria.\n  3. **Naive Random Sampling (NRS)**: Asignación balanceada mediante muestreo aleatorio.\n:::\n\n\n\n### V. METODOLOGÍA (3): MODELOS\n\n::: {.valuebox color=\"white\"}\n#### Resumen de Métodos de Muestreo y Resultados\n\n| Método           | Observaciones | Variables | Nro. No | Nro. Sí |\n|-------------------|---------------|-----------|---------|---------|\n| **Original**      | 7,670         | 819       | 3,144   | 4,526   |\n| **SMOTE**         | 9,052         | 819       | 4,526   | 4,526   |\n| **SMOTE Tomek**   | 8,766         | 819       | 4,383   | 4,383   |\n| **NRS**           | 9,052         | 819       | 4,526   | 4,526   |\n\n#### Implementación\n\nEstos métodos aseguran que la distribución de la variable dependiente esté balanceada, mejorando la capacidad predictiva del modelo.\n\n#### Modelos Utilizados\n\n- **Regresión Logística**\n- **Lasso**\n- **Ridge**\n- **Elastic Net**\n- **Random Forest**\n- **Boosted Trees**\n:::\n\n# Resultados preliminares\n\n## Column {.tabset}\n\n### Variables más relevantes\n\n#### Column {width=\"30%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; border-left: 4px solid #009688; padding: 1em; margin-bottom: 1em;\"}\n#### Variables que más aportan en el modelo de predicción Boosted Trees\n\n| **Variable**               | **Descripción**                                                             |\n|----------------------------|-----------------------------------------------------------------------------|\n| **Sexo**                   | Sexo                                                                        |\n| **Edad_años**              | Edad                                                                        |\n| **P48B_2**                 | Inspecciones técnicas de barreras físicas                                   |\n| **C96_3_1**                | Ingresos totales: transferencias, canon y sobrecanon                        |\n| **P19_4_VM**               | Número de mujeres empleadas en la municipalidad bajo CAS                    |\n| **Trabajo_en_venezuela**   | Trabajó en Venezuela                                                        |\n| **P19_4_VH**               | Número de hombres empleados en la municipalidad bajo CAS                    |\n| **Necesidad_no_cubierta_alimentos** | Necesidad alimentaria no cubierta                                   |\n| **C96_1_1_2**              | Ingresos corrientes por alcabala                                            |\n| **Sentir_extraño_peru**    | Se siente extraño en Perú                                                   |\n:::\n\n\n\n### Importancia de las variables\n\n#### Column {width=\"35%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #222222; padding: 1.5em; border-radius: 8px; border-left: 4px solid #009688; margin-bottom: 1em;\"}\n#### Importancia de las variables\n\n1. **Variables individuales**:\n   - Sexo, edad y experiencia laboral previa.\n\n2. **Variables municipales**:\n   - Capacidad de la municipalidad: empleados, ingresos y fiscalización.\n\nEstas variables reflejan los factores críticos que determinan el estado de actividad laboral de los refugiados y migrantes venezolanos.\n:::\n\n\n\n\n\n\n### Correlación\n\n#### Variables II\n\n```{r, echo=FALSE}\n# Cargar bibliotecas necesarias\nlibrary(tidyverse)\nlibrary(corrplot)\n\n# Selección de variables relevantes para el análisis\nvariables_seleccionadas <- data_lima %>%\n  select(trabajo, sexo, edad_años, P48B_2, C96_3_1, P19_4_VM, \n         trabajo_en_venezuela, P19_4_VH, necesidad_no_cubierta_alimentos, \n         C96_1_1_2, sentir_extraño_peru)\n\n# Calcular la matriz de correlación para las variables seleccionadas\ncorrelaciones <- cor(variables_seleccionadas, use = \"complete.obs\")\n\n# Identificar las principales correlaciones con \"trabajo\"\nprincipales_correlaciones <- as.data.frame(correlaciones) %>%\n  select(trabajo) %>%\n  rownames_to_column(var = \"variable\") %>%\n  arrange(desc(abs(trabajo))) %>%\n  filter(variable != \"trabajo\")\n\n# Mostrar las principales correlaciones en la consola\nprint(principales_correlaciones)\n\n# Crear una visualización de la matriz de correlación con etiquetas ajustadas\ncorrplot(\n  correlaciones, \n  method = \"circle\",  # Representación con círculos\n  type = \"lower\",     # Solo mostrar la mitad inferior de la matriz\n  order = \"hclust\",   # Ordenar por jerarquía de similitud\n  tl.col = \"black\",   # Color de las etiquetas\n  tl.srt = 45,        # Rotar etiquetas a 45 grados\n  addCoef.col = \"black\",  # Mostrar coeficientes numéricos\n  number.cex = 0.7,       # Tamaño del texto de los coeficientes\n  tl.cex = 0.8,           # Tamaño del texto de las etiquetas\n  title = \"Matriz de Correlación Ajustada\",  # Título del gráfico\n  mar = c(0, 0, 2, 0)     # Ajuste de márgenes\n)\n\n```\n\n\n\n### Distribucion necesidad alimentaria no cubierta por distrito\n\n```{r, echo=FALSE}\n# Cargar bibliotecas necesarias\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(leaflet)\n# \n# # Leer datos y shapefile\n# data <- read.csv(\"full_data_2022.csv\", stringsAsFactors = FALSE, fileEncoding = \"latin1\")\n# lima_districts <- st_read(\"./mapas/data-mapas/Distrital INEI 2023 geogpsperu SuyoPomalia.shp\")\n# \n# # Filtrar datos para Lima\n# data_lima <- data %>%\n#   filter(DEPARTAMENTO == \"LIMA\") %>%\n#   mutate(trabajo = as.numeric(as.character(trabajo_semana_anterior)))\n# \n# # Análisis del porcentaje de personas que trabajan en Lima por distrito\n# porcentaje_trabajo <- data_lima %>%\n#   group_by(DISTRITO) %>%\n#   summarise(\n#     total_respuestas = n(),\n#     si_trabajo = sum(trabajo == 1, na.rm = TRUE),\n#     porcentaje_trabajo = (si_trabajo / total_respuestas) * 100\n#   )\n\n# # Unir los datos con los shapefiles\n# lima_districts <- lima_districts %>%\n#   filter(PROVINCIA == \"LIMA\") %>%\n#   left_join(porcentaje_trabajo, by = c(\"DISTRITO\" = \"DISTRITO\")) %>%\n#   mutate(porcentaje_trabajo = ifelse(is.na(porcentaje_trabajo), 0, porcentaje_trabajo))\n```\n\n\n```{r }\n# Análisis de la necesidad alimentaria no cubierta por distrito\nnecesidad_alimentos <- data_lima %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    necesidad_no_cubierta = sum(necesidad_no_cubierta_alimentos == 1, na.rm = TRUE),\n    porcentaje_necesidad = (necesidad_no_cubierta / total_respuestas) * 100\n  )\n\n# Unir con los shapefiles\nlima_districts <- lima_districts %>%\n  left_join(necesidad_alimentos, by = c(\"DISTRITO\" = \"DISTRITO\")) %>%\n  mutate(porcentaje_necesidad = ifelse(is.na(porcentaje_necesidad), 0, porcentaje_necesidad))\n\n# Mapa de la necesidad alimentaria no cubierta\nleaflet(lima_districts) %>%\n  addTiles() %>%\n  addPolygons(\n    fillColor = ~colorNumeric(\"YlGnBu\", porcentaje_necesidad)(porcentaje_necesidad),\n    color = \"black\",\n    weight = 1,\n    opacity = 1,\n    fillOpacity = 0.7,\n    label = ~paste(DISTRITO, \"<br>\", \"Porcentaje de necesidad alimentaria no cubierta:\", round(porcentaje_necesidad, 1), \"%\"),\n    popup = ~paste(DISTRITO, \"<br>\", \"Porcentaje de necesidad alimentaria no cubierta:\", round(porcentaje_necesidad, 1), \"%\")\n  ) %>%\n  addLegend(pal = colorNumeric(\"YlGnBu\", NULL), values = ~porcentaje_necesidad, opacity = 0.7, title = \"Necesidad Alimentaria No Cubierta\")\n```\n\n### Ingresos por alcabala\n\n```{r}\n# Analizando otras variables como los ingresos por alcabala\ningresos_alcabala <- data_lima %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    ingresos = sum(C96_1_1_2, na.rm = TRUE),\n    ingresos_promedio = mean(C96_1_1_2, na.rm = TRUE)\n  )\n\n# Visualización de ingresos por alcabala en un gráfico de barras\nggplot(ingresos_alcabala, aes(x = reorder(DISTRITO, ingresos_promedio), y = ingresos_promedio)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  coord_flip() +\n  labs(title = \"Ingresos promedio por alcabala por distrito\",\n       x = \"Distrito\", y = \"Ingresos Promedio (en soles)\") +\n  theme_minimal()\n```\n\n### Factores laborales y sociales\n\n```{r}\n# Analizando las variables de empleados bajo CAS\nempleados_cas <- data_lima %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    mujeres_empleadas = sum(P19_4_VM, na.rm = TRUE),\n    hombres_empleados = sum(P19_4_VH, na.rm = TRUE),\n    total_empleados = mujeres_empleadas + hombres_empleados\n  ) %>%\n  # Ordenando los distritos por el total de empleados\n  mutate(DISTRITO = reorder(DISTRITO, total_empleados))\n\n# Visualización de empleados bajo CAS\nggplot(empleados_cas, aes(x = DISTRITO, y = total_empleados, fill = DISTRITO)) +\n  geom_bar(stat = \"identity\", show.legend = FALSE) +  # Quitar leyenda para claridad\n  coord_flip() +  # Gráfico horizontal\n  scale_fill_viridis_d() +  # Usando una paleta de colores distinguible\n  labs(\n    title = \"Número total de empleados bajo CAS por distrito\",\n    x = \"Distrito\",\n    y = \"Número total de empleados bajo CAS\",\n    subtitle = \"Distribución de empleados mujeres y hombres por distrito en Lima\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 10),  # Mejor legibilidad en el eje X\n    axis.text.y = element_text(size = 10),  # Mejor legibilidad en el eje Y\n    plot.title = element_text(size = 14, face = \"bold\"),  # Título destacado\n    plot.subtitle = element_text(size = 12, face = \"italic\")  # Subtítulo en cursiva\n  )\n\n```\n\n\n\n\n\n\n### Desempeño de modelos\n\n#### Column {width=\"50%\"}\n\n::: {.valuebox color=\"white\"}\n```{r tabla-desemeno, echo=FALSE}\nlibrary(gt)\n\n# Datos actualizados\nmodelos <- tibble::tribble(\n  ~Index, ~Overall_Accuracy, ~Roc_Auc, ~Global_F1_Score,\n  \"O. Logistic Regression\", 0.571, 0.548, 0.534,\n  \"S. Logistic Regression\", 0.536, 0.558, 0.534,\n  \"ST. Logistic Regression\", 0.537, 0.558, 0.534,\n  \"NRS. Logistic Regression\", 0.519, 0.552, 0.519,\n  \"O. Logistic Lasso\", 0.568, 0.547, 0.446,\n  \"S. Logistic Lasso\", 0.519, 0.559, 0.519,\n  \"ST. Logistic Lasso\", 0.519, 0.559, 0.518,\n  \"NRS. Logistic Lasso\", 0.512, 0.550, 0.511,\n  \"O. Logistic Ridge\", 0.568, 0.547, 0.446,\n  \"S. Logistic Ridge\", 0.519, 0.559, 0.519,\n  \"ST. Logistic Ridge\", 0.519, 0.559, 0.518,\n  \"NRS. Logistic Ridge\", 0.512, 0.550, 0.511,\n  \"O. Logistic Elastic Net\", 0.568, 0.547, 0.446,\n  \"S. Logistic Elastic Net\", 0.519, 0.559, 0.519,\n  \"ST. Logistic Elastic Net\", 0.519, 0.559, 0.518,\n  \"NRS. Logistic Elastic Net\", 0.512, 0.550, 0.511,\n  \"O. Random Forest\", 0.811, 0.892, 0.799,\n  \"S. Random Forest\", 0.818, 0.890, 0.808,\n  \"ST. Random Forest\", 0.815, 0.889, 0.805,\n  \"NRS. Random Forest\", 0.816, 0.892, 0.806,\n  \"O. Boosted Trees\", 0.819, 0.900, 0.808,\n  \"S. Boosted Trees\", 0.812, 0.895, 0.805,\n  \"ST. Boosted Trees\", 0.816, 0.896, 0.808,\n  \"NRS. Boosted Trees\", 0.818, 0.895, 0.813\n)\n\n# Crear tabla interactiva\nmodelos %>%\n  gt() %>%\n  tab_header(\n    title = \"Desempeño de modelos\",\n    subtitle = \"Comparación de métricas clave entre diferentes modelos\"\n  ) %>%\n  fmt_number(\n    columns = c(Overall_Accuracy, Roc_Auc, Global_F1_Score),\n    decimals = 3\n  ) %>%\n  cols_label(\n    Index = \"Modelo\",\n    Overall_Accuracy = \"Exactitud global\",\n    Roc_Auc = \"Área bajo la curva ROC\",\n    Global_F1_Score = \"F1 score global\"\n  ) %>%\n  tab_options(\n    table.font.size = \"small\",\n    heading.align = \"center\",\n    table.border.top.width = px(2),\n    table.border.top.color = \"black\",\n    table.border.bottom.width = px(2),\n    table.border.bottom.color = \"black\"\n  )\n\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Conclusiones preliminares\n\n## Column {.tabset}\n\n### Modelos predictivos efectivos\n\n#### Column {width=\"30%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #000000; border-left: 4px solid #4caf50; padding: 1em; margin-bottom: 1em;\"}\n#### Modelos predictivos efectivos\n\nLos modelos basados en **árboles de decisión**, en particular los **boosted trees**, destacan como los más precisos para predecir el estado laboral de refugiados y migrantes venezolanos en el Perú.  \n\nEsto refleja la robustez de estos algoritmos al capturar patrones complejos y no lineales en los datos, adaptándose eficazmente a la diversidad de características individuales y contextuales.\n:::\n\n\n\n### Recomendaciones prácticas\n\n#### Column {width=\"35%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; border-left: 4px solid #009688; padding: 1em; margin-bottom: 1em;\"}\n#### Recomendaciones prácticas\n\nLas conclusiones resaltan la necesidad de una aproximación integral para diseñar políticas públicas focalizadas que combinen los factores individuales y municipales identificados.  \n\nImplementar programas que integren estos factores podría mejorar significativamente la inclusión económica y social de los refugiados y migrantes venezolanos.\n:::\n\n\n### Fuente de datos\n\n#### Column {width=\"100%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; padding: 1.5em; border-left: 4px solid #3f51b5; font-size: 1.1em;\"}\n#### Fuentes de datos\n\nLos datos utilizados para este análisis se basan en diversas fuentes relevantes y confiables. Las referencias en formato **APA 7** son las siguientes:\n\n1. **Instituto Nacional de Estadística e Informática (INEI).** (2023). *Encuesta Nacional de Programas de Educación y Evaluación del Perú (ENPOVE)*. Recuperado de [https://www.inei.gob.pe](https://www.inei.gob.pe).\n\n2. **Registro Nacional de Municipalidades (RENAMU).** (2023). *Reporte de capacidades municipales en el Perú*. Recuperado de [https://www.renamu.gob.pe](https://www.renamu.gob.pe).\n\n3. **Ministerio de Economía y Finanzas (MEF).** (2023). *Sistema Integrado de Administración Financiera (SIAF)*. Recuperado de [https://www.siaf.mef.gob.pe](https://www.siaf.mef.gob.pe).\n\n4. **ACNUR.** (2023). *Migrantes y refugiados venezolanos: Barreras legales y sociales*. Recuperado de [https://www.acnur.org](https://www.acnur.org).\n\n5. **Távarez, R., & Alcázar, R.** (2023). *Obstáculos para la validación de títulos profesionales en migrantes venezolanos*. Publicado en la Revista de Estudios Sociales, 35(2), 102–115.\n:::\n","srcMarkdownNoYaml":"\n\n# Análisis principal\n\n## Column {.tabset}\n\n### Introducción y estado de actividad laboral\n\n#### Column {.tabset}\n\n##### Introducción\n\n###### Column {width=\"10%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; border-left: 4px solid #009688; padding: 1em; margin-bottom: 1em;\"}\n**1 078 854**  \n**Personas venezolanas en el Perú en 2022.**\n:::\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; border-left: 4px solid #009688; padding: 1em; margin-bottom: 1em;\"}\n**41%**  \n**Incremento en la población migrante venezolana desde 2018.**\n:::\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; border-left: 4px solid #009688; padding: 1em; margin-bottom: 1em;\"}\n**82.5%**  \n**Migrantes concentrados en Lima y Callao.**\n:::\n\n###### Column {width=\"75%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #222222; padding: 1em; border-radius: 4px; box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\"}\n\n![Gráfico Nº1: Concentración de refugiados y migrantes venezolanos en ciudades del Perú (2018-2022)](./imagenes/1-Imagen1.png){fig-align=\"center\" width=\"100%\"}\n\n:::\n\n###### Column {width=\"25%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; padding: 1em; border-left: 4px solid #009688;\"}\n\nEl Perú albergó a **1,078,854 personas venezolanas** en 2022, un incremento del **41%** desde 2018.  \nLas ciudades con mayor concentración fueron:\n\n- **Lima y Callao**: 82.5%  \n- **Trujillo**: 5.1%  \n- **Arequipa**: 3.3%  \n- **Piura**: 2.2%  \n\nEste gráfico destaca el impacto de la migración venezolana en las principales áreas urbanas, con Lima y Callao como los destinos predominantes.\n\n:::\n\n##### Estado de actividad laboral\n\n###### Column {width=\"75%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #222222; padding: 1em; border-radius: 4px; box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\"}\n\n![Gráfico Nº2. Población refugiada y migrante de Venezuela en el Perú, según estado de actividad laboral en el 2022](./imagenes/2-Imagen2.png){fig-align=\"center\" width=\"100%\"}\n\n:::\n\n###### Column {width=\"25%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; padding: 1em; border-left: 4px solid #009688;\"}\n\nEl **58.5%** de la población refugiada y migrante venezolana en el Perú participó en actividades laborales durante el período evaluado, destacando su integración parcial al mercado laboral peruano.  \nEl 41.5% de los migrantes venezolanos en Perú no encontró trabajo o no participó en actividades laborales durante el período evaluado.\n\n:::\n\n\n\n### Investigación y revisión de literatura\n\n#### Column {.tabset}\n\n##### Preguntas de investigación\n\n::: {.valuebox style=\"background-color: #e8f5e9; color: #1b5e20; border-left: 4px solid #43a047; padding: 1em; margin-bottom: 1em;\"}\n\n1.**¿Cuál es el modelo de Machine Learning que mejor predice el estado de actividad laboral en refugiados y migrantes venezolanos en el Perú en 2022?**\n\n2.**¿Cuáles son las características más importantes asociadas al estado de actividad laboral en refugiados y migrantes venezolanos en el Perú en 2022?**\n\n:::\n\n##### Revisión de la literatura\n\n::: {.valuebox style=\"background-color: #e8f5e9; color: #1b5e20; border-left: 4px solid #43a047; padding: 1em; margin-bottom: 1em;\"}\n\n1. **Estudios cualitativos y econométricos** han identificado barreras como:\n\n   - Redes de contacto limitadas.  \n   - Obstáculos para la validación de títulos (Távarez y Alcázar, 2023).  \n\n2. **Barreras para la integración en LATAM y Perú**:  \n\n   - Representaciones negativas en medios (ACNUR, 2023).  \n   - Obstáculos legales para la integración económica (Alcázar y Távarez, 2023).  \n   - Falta de acceso a empleo y condiciones de vida adecuadas (INEI, 2023).  \n\n3. **Predicción de abandono laboral con Machine Learning**:  \n\n   - Métodos basados en **árboles de decisión** han demostrado ser los más efectivos (Jiménez, 2023).\n\n:::\n\n##### Relevancia de la investigación\n\n::: {.valuebox style=\"background-color: #e8f5e9; color: #1b5e20; border-left: 4px solid #43a047; padding: 1em; margin-bottom: 1em;\"}\n\n1. **Teórico I**: \n\nAplicación de Machine Learning para identificar la situación laboral.  \n\n2. **Teórico II**: \n\nAnálisis profundo de factores asociados al estado de actividad laboral, evaluando **806 variables** (individuo, infraestructura, distrito).  \n\n**Impacto práctico**:  \n- Focalización en políticas públicas.  \n- Programas específicos para necesidades migrantes.  \n- Mejora de la inclusión laboral y económica.\n\n:::\n\n\n\n\n```{r, include=FALSE}\n# Cargar bibliotecas necesarias\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggplot2)\n\n# Leer datos y shapefile\ndata <- read.csv(\"full_data_2022.csv\", stringsAsFactors = FALSE, fileEncoding = \"latin1\")\nlima_districts <- st_read(\"./mapas/data-mapas/Distrital INEI 2023 geogpsperu SuyoPomalia.shp\")\n\n# Filtrar y procesar datos\ndata_lima <- data %>%\n  filter(DEPARTAMENTO == \"LIMA\") %>%\n  mutate(trabajo = as.numeric(as.character(trabajo_semana_anterior)))\n\nporcentaje_trabajo <- data_lima %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    si_trabajo = sum(trabajo == 1, na.rm = TRUE),\n    porcentaje_trabajo = (si_trabajo / total_respuestas) * 100\n  )\n\nlima_districts <- lima_districts %>%\n  filter(PROVINCIA == \"LIMA\") %>%\n  left_join(porcentaje_trabajo, by = c(\"DISTRITO\" = \"DISTRITO\")) %>%\n  mutate(porcentaje_trabajo = ifelse(is.na(porcentaje_trabajo), 0, porcentaje_trabajo))\n```\n\n\n\n\n# Mapas\n\n#### Column {.tabset}\n\n##### Mapa General de Trabajo\n\n###### Column {width=\"100%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #222222; padding: 1em; border-radius: 4px; box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\"}\n\n```{r mapaGeneralTrabajo, echo=FALSE}\n\n\n# Mejorar el mapa para artículos científicos\nggplot(data = lima_districts) +\n  geom_sf(aes(fill = porcentaje_trabajo), color = \"black\", size = 0.3) + # Líneas negras más delgadas\n  scale_fill_gradientn(\n    colors = c(\"#d9f0a3\", \"#addd8e\", \"#78c679\", \"#41ab5d\", \"#238443\", \"#005a32\"), # Escala de verdes profesionales\n    name = \"Trabajo (%)\",\n    limits = c(0, 100),\n    breaks = seq(0, 100, by = 20), # Divisiones claras\n    labels = function(x) paste0(x, \"%\") # Etiquetas con porcentaje\n  ) +\n  labs(\n    title = \"Porcentaje de trabajo por distrito en Lima\",\n    subtitle = \"Proporción de encuestados que trabajaron la semana anterior\",\n    caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n  ) +\n  theme_minimal(base_size = 14) + # Tema limpio y adecuado para publicaciones\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5), # Títulos más destacados\n    plot.subtitle = element_text(size = 12, hjust = 0.5, color = \"grey20\"), # Subtítulos claros\n    plot.caption = element_text(size = 10, color = \"grey40\", hjust = 1), # Fuente y contexto\n    legend.position = \"bottom\", # Leyenda en la parte inferior\n    legend.title = element_text(size = 12, face = \"bold\"), # Título de la leyenda destacado\n    legend.text = element_text(size = 7.5), # Texto de leyenda legible\n    axis.text = element_blank(), # Eliminar texto de ejes\n    axis.title = element_blank(), # Eliminar títulos de ejes\n    panel.grid = element_blank(), # Quitar cuadrículas para limpieza\n    panel.background = element_rect(fill = \"white\", color = NA) # Fondo blanco limpio\n  )\n```\n\n:::\n\n##### Mapas distritos de Lima Metropolitana\n\n###### Column {.tabset}\n\n```{r mapasPorDistrito, echo=FALSE}\n\nlibrary(dplyr)\n\n# Loop para generar mapas por distrito con diseño profesional\nfor (distrito in unique(lima_districts$DISTRITO)) {\n  distrito_data <- lima_districts %>%\n    filter(DISTRITO == distrito)\n  \n  # Generar un mapa profesional por cada distrito\n  p <- ggplot(data = distrito_data) +\n    geom_sf(aes(fill = porcentaje_trabajo), color = \"black\", size = 0.3) + # Borde negro para definición\n    scale_fill_gradientn(\n      colors = c(\"#d9f0a3\", \"#addd8e\", \"#78c679\", \"#41ab5d\", \"#238443\", \"#005a32\"), # Escala perceptible\n      name = \"Porcentaje de trabajo (%)\",\n      limits = c(0, 100),\n      breaks = seq(0, 100, by = 20), # Límites claros y proporcionales\n      labels = function(x) paste0(x, \"%\")\n    ) +\n    labs(\n      title = paste(\"Trabajo en el distrito:\", distrito),\n      subtitle = \"Proporción de encuestados que trabajaron la semana anterior\",\n      caption = \"Fuente: Elaboración propia con datos de ENPOVE 2022\"\n    ) +\n    theme_minimal(base_size = 14) + # Tema más adecuado para publicaciones científicas\n    theme(\n      plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5), # Título centrado y prominente\n      plot.subtitle = element_text(size = 12, hjust = 0.5, color = \"grey20\"), # Subtítulo legible\n      plot.caption = element_text(size = 10, color = \"grey40\", hjust = 1), # Fuente y contexto\n      axis.text = element_blank(), # Quitar texto de ejes\n      axis.title = element_blank(), # Quitar títulos de ejes\n      panel.grid = element_blank(), # Eliminar cuadrícula\n      panel.background = element_rect(fill = \"white\", color = NA), # Fondo blanco para claridad\n      legend.position = \"bottom\", # Leyenda en la parte inferior\n      legend.title = element_text(size = 12, face = \"bold\"), # Título de la leyenda destacado\n      legend.text = element_text(size = 7.5) # Texto de leyenda legible\n    )\n  \n  # Renderizar cada mapa en su propia subpestaña\n  cat(paste0(\" \", distrito, \"\\n\"))\n  print(p)\n}\n```\n\n\n##### Clasificación del trabajo\n\n###### Column {.tabset}\n\n\n\n```{r, echo=FALSE, echo=FALSE}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(classInt)\n# Generar los puntos de corte únicos para los cuantiles\nbreaks <- unique(classIntervals(lima_districts$porcentaje_trabajo, n = 5, style = \"quantile\")$brks)\n\n# Verificar el número de intervalos y etiquetas\nnum_intervals <- length(breaks) - 1  # Número de intervalos es siempre número de cortes menos 1\n\n# Asegúrate de que las etiquetas coincidan con el número de intervalos\nlabels <- c(\"muy bajo\", \"bajo\", \"medio\", \"alto\", \"muy alto\")[1:num_intervals]\n\n# Clasificar los distritos según porcentaje de trabajo\nlima_districts$trabajo_cat <- cut(\n  lima_districts$porcentaje_trabajo,\n  breaks = breaks,\n  include.lowest = TRUE,\n  labels = labels\n)\n\n```\n\n#### Distritos con trabajo muy bajo\n\n\n```{r, echo=FALSE}\n# Generar el mapa para distritos con trabajo muy bajo\nggplot() +\n  geom_sf(\n    data = lima_districts %>% filter(trabajo_cat != \"muy bajo\"),\n    aes(geometry = geometry),\n    fill = \"grey90\",\n    color = \"white\"\n  ) +\n  geom_sf(\n    data = lima_districts %>% filter(trabajo_cat == \"muy bajo\"),\n    aes(fill = trabajo_cat, geometry = geometry),\n    color = \"black\"\n  ) +\n  scale_fill_manual(values = c(\"muy bajo\" = \"red\")) +\n  labs(\n    title = \"Distritos con trabajo muy bajo\",\n    subtitle = \"Porcentaje de personas que trabajaron la semana anterior\",\n    caption = \"Fuente: ENPOVE 2022\"\n  ) +\n  theme_void()\n```\n\n#### Distritos con trabajo muy alto\n\n```{r, echo=FALSE}\n# Generar el mapa para distritos con trabajo muy alto\nggplot() +\n  geom_sf(\n    data = lima_districts %>% filter(trabajo_cat != \"muy alto\"),\n    aes(geometry = geometry),\n    fill = \"grey90\",\n    color = \"white\"\n  ) +\n  geom_sf(\n    data = lima_districts %>% filter(trabajo_cat == \"muy alto\"),\n    aes(fill = trabajo_cat, geometry = geometry),\n    color = \"black\"\n  ) +\n  scale_fill_manual(values = c(\"muy alto\" = \"blue\")) +\n  labs(\n    title = \"Distritos con trabajo muy alto\",\n    subtitle = \"Porcentaje de personas que trabajaron la semana anterior\",\n    caption = \"Fuente: ENPOVE 2022\"\n  ) +\n  theme_void()\n```\n\n\n\n\n# Spatial II\n\n#### Column {.tabset}\n\n##### Mapa General de Trabajo\n\n###### Column {width=\"100%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #222222; padding: 1em; border-radius: 4px; box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\"}\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Cargar bibliotecas necesarias\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(spdep)\nlibrary(ggplot2)\n\n# # Leer datos y shapefile\n# data <- read.csv(\"full_data_2022.csv\", stringsAsFactors = FALSE, fileEncoding = \"latin1\")\n# lima_districts <- st_read(\"./mapas/data-mapas/Distrital INEI 2023 geogpsperu SuyoPomalia.shp\")\n# \n# # Procesar datos\n# data_lima <- data %>%\n#   filter(DEPARTAMENTO == \"LIMA\") %>%\n#   mutate(trabajo = as.numeric(as.character(trabajo_semana_anterior)))\n# \n# porcentaje_trabajo <- data_lima %>%\n#   group_by(DISTRITO) %>%\n#   summarise(\n#     total_respuestas = n(),\n#     si_trabajo = sum(trabajo == 1, na.rm = TRUE),\n#     porcentaje_trabajo = (si_trabajo / total_respuestas) * 100\n#   )\n# \n# lima_districts <- lima_districts %>%\n#   filter(PROVINCIA == \"LIMA\") %>%\n#   left_join(porcentaje_trabajo, by = c(\"DISTRITO\" = \"DISTRITO\")) %>%\n#   mutate(porcentaje_trabajo = ifelse(is.na(porcentaje_trabajo), 0, porcentaje_trabajo))\n\n# Calcular matriz de pesos espaciales (Reina)\nw <- poly2nb(lima_districts, queen = TRUE)\nw_list <- nb2listw(w, style = \"W\", zero.policy = TRUE)\n\n# Calcular Moran's I Global\nmoran_global <- moran.test(lima_districts$porcentaje_trabajo, listw = w_list, zero.policy = TRUE)\n\n# Imprimir resultados de Moran's I Global\nmoran_global\n\n# Calcular Moran's I Local (LISA)\nlocal_moran <- localmoran(lima_districts$porcentaje_trabajo, listw = w_list, zero.policy = TRUE)\n\n# Agregar resultados al shapefile\nlima_districts <- lima_districts %>%\n  mutate(\n    LISA_I = local_moran[, 1],\n    LISA_p = local_moran[, 5],\n    LISA_cluster = case_when(\n      LISA_I > 0 & LISA_p <= 0.05 ~ \"Cluster Alto-Alto\",\n      LISA_I < 0 & LISA_p <= 0.05 ~ \"Cluster Bajo-Bajo\",\n      LISA_I > 0 & LISA_p > 0.05 ~ \"Sin Significancia\",\n      TRUE ~ \"Sin Cluster\"\n    )\n  )\n\n# Mapa de Moran's I Local\nggplot(data = lima_districts) +\n  geom_sf(aes(fill = LISA_cluster), color = \"white\") +\n  scale_fill_manual(\n    values = c(\n      \"Cluster Alto-Alto\" = \"red\",\n      \"Cluster Bajo-Bajo\" = \"blue\",\n      \"Sin Cluster\" = \"grey\",\n      \"Sin Significancia\" = \"yellow\"\n    ),\n    na.value = \"white\"\n  ) +\n  labs(\n    title = \"Clusters espaciales: proporción de personas que trabajaron\",\n    subtitle = \"Análisis local de Moran's I (LISA)\",\n    fill = \"Clusters LISA\"\n  ) +\n  theme_void()\n```\n\n:::\n\n\n\n\n# Metodología\n\n## Column {.tabset}\n\n### V. METODOLOGÍA (1): BASE DE DATOS\n\n::: {.valuebox color=\"white\"}\n#### Metodología de Procesamiento\n\n1. **Metodología:**\n   - **Filtro de missings**: Variables con más del 10% de valores faltantes fueron eliminadas.\n\n2. **Resumen de la Base de Datos**:\n   \n   | Año  | Fuentes                | Número de Observaciones                                    | Número de Variables |\n   |------|-------------------------|-----------------------------------------------------------|---------------------|\n   | 2022 | ENPOVE, RENAMU, SIAF   | 10,227 refugiados o migrantes venezolanos en Perú (90%) | 806                 |\n\n3. **Filtros Adicionales**:\n   - Filtro de variabilidad: Eliminación de variables constantes.\n   - Imputación con **media** y **moda**.\n   - Tratamiento de **outliers**.\n\n4. **Metodología Avanzada**:\n   - Métodos de limpieza y **fuzzy merge** aplicados para garantizar calidad en los datos.\n:::\n\n\n\n### V. METODOLOGÍA (2): VARIABLE DEPENDIENTE\n\n::: {.valuebox color=\"white\"}\n#### Definición de la Variable Dependiente\n\n- **Pregunta:** La semana pasada del ___ al ___, ¿tuvo algún trabajo (sin contar los quehaceres del hogar)?\n  - Opciones:\n    1. **Sí**\n    2. **No**\n\n#### Estrategias de Resampling\n\n- **Métodos Aplicados:**\n  1. **SMOTE TOMEK**: Combina oversampling y undersampling para balancear clases.\n  2. **SMOTE**: Sobremuestreo de la clase minoritaria.\n  3. **Naive Random Sampling (NRS)**: Asignación balanceada mediante muestreo aleatorio.\n:::\n\n\n\n### V. METODOLOGÍA (3): MODELOS\n\n::: {.valuebox color=\"white\"}\n#### Resumen de Métodos de Muestreo y Resultados\n\n| Método           | Observaciones | Variables | Nro. No | Nro. Sí |\n|-------------------|---------------|-----------|---------|---------|\n| **Original**      | 7,670         | 819       | 3,144   | 4,526   |\n| **SMOTE**         | 9,052         | 819       | 4,526   | 4,526   |\n| **SMOTE Tomek**   | 8,766         | 819       | 4,383   | 4,383   |\n| **NRS**           | 9,052         | 819       | 4,526   | 4,526   |\n\n#### Implementación\n\nEstos métodos aseguran que la distribución de la variable dependiente esté balanceada, mejorando la capacidad predictiva del modelo.\n\n#### Modelos Utilizados\n\n- **Regresión Logística**\n- **Lasso**\n- **Ridge**\n- **Elastic Net**\n- **Random Forest**\n- **Boosted Trees**\n:::\n\n# Resultados preliminares\n\n## Column {.tabset}\n\n### Variables más relevantes\n\n#### Column {width=\"30%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; border-left: 4px solid #009688; padding: 1em; margin-bottom: 1em;\"}\n#### Variables que más aportan en el modelo de predicción Boosted Trees\n\n| **Variable**               | **Descripción**                                                             |\n|----------------------------|-----------------------------------------------------------------------------|\n| **Sexo**                   | Sexo                                                                        |\n| **Edad_años**              | Edad                                                                        |\n| **P48B_2**                 | Inspecciones técnicas de barreras físicas                                   |\n| **C96_3_1**                | Ingresos totales: transferencias, canon y sobrecanon                        |\n| **P19_4_VM**               | Número de mujeres empleadas en la municipalidad bajo CAS                    |\n| **Trabajo_en_venezuela**   | Trabajó en Venezuela                                                        |\n| **P19_4_VH**               | Número de hombres empleados en la municipalidad bajo CAS                    |\n| **Necesidad_no_cubierta_alimentos** | Necesidad alimentaria no cubierta                                   |\n| **C96_1_1_2**              | Ingresos corrientes por alcabala                                            |\n| **Sentir_extraño_peru**    | Se siente extraño en Perú                                                   |\n:::\n\n\n\n### Importancia de las variables\n\n#### Column {width=\"35%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #222222; padding: 1.5em; border-radius: 8px; border-left: 4px solid #009688; margin-bottom: 1em;\"}\n#### Importancia de las variables\n\n1. **Variables individuales**:\n   - Sexo, edad y experiencia laboral previa.\n\n2. **Variables municipales**:\n   - Capacidad de la municipalidad: empleados, ingresos y fiscalización.\n\nEstas variables reflejan los factores críticos que determinan el estado de actividad laboral de los refugiados y migrantes venezolanos.\n:::\n\n\n\n\n\n\n### Correlación\n\n#### Variables II\n\n```{r, echo=FALSE}\n# Cargar bibliotecas necesarias\nlibrary(tidyverse)\nlibrary(corrplot)\n\n# Selección de variables relevantes para el análisis\nvariables_seleccionadas <- data_lima %>%\n  select(trabajo, sexo, edad_años, P48B_2, C96_3_1, P19_4_VM, \n         trabajo_en_venezuela, P19_4_VH, necesidad_no_cubierta_alimentos, \n         C96_1_1_2, sentir_extraño_peru)\n\n# Calcular la matriz de correlación para las variables seleccionadas\ncorrelaciones <- cor(variables_seleccionadas, use = \"complete.obs\")\n\n# Identificar las principales correlaciones con \"trabajo\"\nprincipales_correlaciones <- as.data.frame(correlaciones) %>%\n  select(trabajo) %>%\n  rownames_to_column(var = \"variable\") %>%\n  arrange(desc(abs(trabajo))) %>%\n  filter(variable != \"trabajo\")\n\n# Mostrar las principales correlaciones en la consola\nprint(principales_correlaciones)\n\n# Crear una visualización de la matriz de correlación con etiquetas ajustadas\ncorrplot(\n  correlaciones, \n  method = \"circle\",  # Representación con círculos\n  type = \"lower\",     # Solo mostrar la mitad inferior de la matriz\n  order = \"hclust\",   # Ordenar por jerarquía de similitud\n  tl.col = \"black\",   # Color de las etiquetas\n  tl.srt = 45,        # Rotar etiquetas a 45 grados\n  addCoef.col = \"black\",  # Mostrar coeficientes numéricos\n  number.cex = 0.7,       # Tamaño del texto de los coeficientes\n  tl.cex = 0.8,           # Tamaño del texto de las etiquetas\n  title = \"Matriz de Correlación Ajustada\",  # Título del gráfico\n  mar = c(0, 0, 2, 0)     # Ajuste de márgenes\n)\n\n```\n\n\n\n### Distribucion necesidad alimentaria no cubierta por distrito\n\n```{r, echo=FALSE}\n# Cargar bibliotecas necesarias\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(leaflet)\n# \n# # Leer datos y shapefile\n# data <- read.csv(\"full_data_2022.csv\", stringsAsFactors = FALSE, fileEncoding = \"latin1\")\n# lima_districts <- st_read(\"./mapas/data-mapas/Distrital INEI 2023 geogpsperu SuyoPomalia.shp\")\n# \n# # Filtrar datos para Lima\n# data_lima <- data %>%\n#   filter(DEPARTAMENTO == \"LIMA\") %>%\n#   mutate(trabajo = as.numeric(as.character(trabajo_semana_anterior)))\n# \n# # Análisis del porcentaje de personas que trabajan en Lima por distrito\n# porcentaje_trabajo <- data_lima %>%\n#   group_by(DISTRITO) %>%\n#   summarise(\n#     total_respuestas = n(),\n#     si_trabajo = sum(trabajo == 1, na.rm = TRUE),\n#     porcentaje_trabajo = (si_trabajo / total_respuestas) * 100\n#   )\n\n# # Unir los datos con los shapefiles\n# lima_districts <- lima_districts %>%\n#   filter(PROVINCIA == \"LIMA\") %>%\n#   left_join(porcentaje_trabajo, by = c(\"DISTRITO\" = \"DISTRITO\")) %>%\n#   mutate(porcentaje_trabajo = ifelse(is.na(porcentaje_trabajo), 0, porcentaje_trabajo))\n```\n\n\n```{r }\n# Análisis de la necesidad alimentaria no cubierta por distrito\nnecesidad_alimentos <- data_lima %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    necesidad_no_cubierta = sum(necesidad_no_cubierta_alimentos == 1, na.rm = TRUE),\n    porcentaje_necesidad = (necesidad_no_cubierta / total_respuestas) * 100\n  )\n\n# Unir con los shapefiles\nlima_districts <- lima_districts %>%\n  left_join(necesidad_alimentos, by = c(\"DISTRITO\" = \"DISTRITO\")) %>%\n  mutate(porcentaje_necesidad = ifelse(is.na(porcentaje_necesidad), 0, porcentaje_necesidad))\n\n# Mapa de la necesidad alimentaria no cubierta\nleaflet(lima_districts) %>%\n  addTiles() %>%\n  addPolygons(\n    fillColor = ~colorNumeric(\"YlGnBu\", porcentaje_necesidad)(porcentaje_necesidad),\n    color = \"black\",\n    weight = 1,\n    opacity = 1,\n    fillOpacity = 0.7,\n    label = ~paste(DISTRITO, \"<br>\", \"Porcentaje de necesidad alimentaria no cubierta:\", round(porcentaje_necesidad, 1), \"%\"),\n    popup = ~paste(DISTRITO, \"<br>\", \"Porcentaje de necesidad alimentaria no cubierta:\", round(porcentaje_necesidad, 1), \"%\")\n  ) %>%\n  addLegend(pal = colorNumeric(\"YlGnBu\", NULL), values = ~porcentaje_necesidad, opacity = 0.7, title = \"Necesidad Alimentaria No Cubierta\")\n```\n\n### Ingresos por alcabala\n\n```{r}\n# Analizando otras variables como los ingresos por alcabala\ningresos_alcabala <- data_lima %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    ingresos = sum(C96_1_1_2, na.rm = TRUE),\n    ingresos_promedio = mean(C96_1_1_2, na.rm = TRUE)\n  )\n\n# Visualización de ingresos por alcabala en un gráfico de barras\nggplot(ingresos_alcabala, aes(x = reorder(DISTRITO, ingresos_promedio), y = ingresos_promedio)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  coord_flip() +\n  labs(title = \"Ingresos promedio por alcabala por distrito\",\n       x = \"Distrito\", y = \"Ingresos Promedio (en soles)\") +\n  theme_minimal()\n```\n\n### Factores laborales y sociales\n\n```{r}\n# Analizando las variables de empleados bajo CAS\nempleados_cas <- data_lima %>%\n  group_by(DISTRITO) %>%\n  summarise(\n    total_respuestas = n(),\n    mujeres_empleadas = sum(P19_4_VM, na.rm = TRUE),\n    hombres_empleados = sum(P19_4_VH, na.rm = TRUE),\n    total_empleados = mujeres_empleadas + hombres_empleados\n  ) %>%\n  # Ordenando los distritos por el total de empleados\n  mutate(DISTRITO = reorder(DISTRITO, total_empleados))\n\n# Visualización de empleados bajo CAS\nggplot(empleados_cas, aes(x = DISTRITO, y = total_empleados, fill = DISTRITO)) +\n  geom_bar(stat = \"identity\", show.legend = FALSE) +  # Quitar leyenda para claridad\n  coord_flip() +  # Gráfico horizontal\n  scale_fill_viridis_d() +  # Usando una paleta de colores distinguible\n  labs(\n    title = \"Número total de empleados bajo CAS por distrito\",\n    x = \"Distrito\",\n    y = \"Número total de empleados bajo CAS\",\n    subtitle = \"Distribución de empleados mujeres y hombres por distrito en Lima\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 10),  # Mejor legibilidad en el eje X\n    axis.text.y = element_text(size = 10),  # Mejor legibilidad en el eje Y\n    plot.title = element_text(size = 14, face = \"bold\"),  # Título destacado\n    plot.subtitle = element_text(size = 12, face = \"italic\")  # Subtítulo en cursiva\n  )\n\n```\n\n\n\n\n\n\n### Desempeño de modelos\n\n#### Column {width=\"50%\"}\n\n::: {.valuebox color=\"white\"}\n```{r tabla-desemeno, echo=FALSE}\nlibrary(gt)\n\n# Datos actualizados\nmodelos <- tibble::tribble(\n  ~Index, ~Overall_Accuracy, ~Roc_Auc, ~Global_F1_Score,\n  \"O. Logistic Regression\", 0.571, 0.548, 0.534,\n  \"S. Logistic Regression\", 0.536, 0.558, 0.534,\n  \"ST. Logistic Regression\", 0.537, 0.558, 0.534,\n  \"NRS. Logistic Regression\", 0.519, 0.552, 0.519,\n  \"O. Logistic Lasso\", 0.568, 0.547, 0.446,\n  \"S. Logistic Lasso\", 0.519, 0.559, 0.519,\n  \"ST. Logistic Lasso\", 0.519, 0.559, 0.518,\n  \"NRS. Logistic Lasso\", 0.512, 0.550, 0.511,\n  \"O. Logistic Ridge\", 0.568, 0.547, 0.446,\n  \"S. Logistic Ridge\", 0.519, 0.559, 0.519,\n  \"ST. Logistic Ridge\", 0.519, 0.559, 0.518,\n  \"NRS. Logistic Ridge\", 0.512, 0.550, 0.511,\n  \"O. Logistic Elastic Net\", 0.568, 0.547, 0.446,\n  \"S. Logistic Elastic Net\", 0.519, 0.559, 0.519,\n  \"ST. Logistic Elastic Net\", 0.519, 0.559, 0.518,\n  \"NRS. Logistic Elastic Net\", 0.512, 0.550, 0.511,\n  \"O. Random Forest\", 0.811, 0.892, 0.799,\n  \"S. Random Forest\", 0.818, 0.890, 0.808,\n  \"ST. Random Forest\", 0.815, 0.889, 0.805,\n  \"NRS. Random Forest\", 0.816, 0.892, 0.806,\n  \"O. Boosted Trees\", 0.819, 0.900, 0.808,\n  \"S. Boosted Trees\", 0.812, 0.895, 0.805,\n  \"ST. Boosted Trees\", 0.816, 0.896, 0.808,\n  \"NRS. Boosted Trees\", 0.818, 0.895, 0.813\n)\n\n# Crear tabla interactiva\nmodelos %>%\n  gt() %>%\n  tab_header(\n    title = \"Desempeño de modelos\",\n    subtitle = \"Comparación de métricas clave entre diferentes modelos\"\n  ) %>%\n  fmt_number(\n    columns = c(Overall_Accuracy, Roc_Auc, Global_F1_Score),\n    decimals = 3\n  ) %>%\n  cols_label(\n    Index = \"Modelo\",\n    Overall_Accuracy = \"Exactitud global\",\n    Roc_Auc = \"Área bajo la curva ROC\",\n    Global_F1_Score = \"F1 score global\"\n  ) %>%\n  tab_options(\n    table.font.size = \"small\",\n    heading.align = \"center\",\n    table.border.top.width = px(2),\n    table.border.top.color = \"black\",\n    table.border.bottom.width = px(2),\n    table.border.bottom.color = \"black\"\n  )\n\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Conclusiones preliminares\n\n## Column {.tabset}\n\n### Modelos predictivos efectivos\n\n#### Column {width=\"30%\"}\n\n::: {.valuebox style=\"background-color: #ffffff; color: #000000; border-left: 4px solid #4caf50; padding: 1em; margin-bottom: 1em;\"}\n#### Modelos predictivos efectivos\n\nLos modelos basados en **árboles de decisión**, en particular los **boosted trees**, destacan como los más precisos para predecir el estado laboral de refugiados y migrantes venezolanos en el Perú.  \n\nEsto refleja la robustez de estos algoritmos al capturar patrones complejos y no lineales en los datos, adaptándose eficazmente a la diversidad de características individuales y contextuales.\n:::\n\n\n\n### Recomendaciones prácticas\n\n#### Column {width=\"35%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; border-left: 4px solid #009688; padding: 1em; margin-bottom: 1em;\"}\n#### Recomendaciones prácticas\n\nLas conclusiones resaltan la necesidad de una aproximación integral para diseñar políticas públicas focalizadas que combinen los factores individuales y municipales identificados.  \n\nImplementar programas que integren estos factores podría mejorar significativamente la inclusión económica y social de los refugiados y migrantes venezolanos.\n:::\n\n\n### Fuente de datos\n\n#### Column {width=\"100%\"}\n\n::: {.valuebox style=\"background-color: #f5f5f5; color: #004d61; padding: 1.5em; border-left: 4px solid #3f51b5; font-size: 1.1em;\"}\n#### Fuentes de datos\n\nLos datos utilizados para este análisis se basan en diversas fuentes relevantes y confiables. Las referencias en formato **APA 7** son las siguientes:\n\n1. **Instituto Nacional de Estadística e Informática (INEI).** (2023). *Encuesta Nacional de Programas de Educación y Evaluación del Perú (ENPOVE)*. Recuperado de [https://www.inei.gob.pe](https://www.inei.gob.pe).\n\n2. **Registro Nacional de Municipalidades (RENAMU).** (2023). *Reporte de capacidades municipales en el Perú*. Recuperado de [https://www.renamu.gob.pe](https://www.renamu.gob.pe).\n\n3. **Ministerio de Economía y Finanzas (MEF).** (2023). *Sistema Integrado de Administración Financiera (SIAF)*. Recuperado de [https://www.siaf.mef.gob.pe](https://www.siaf.mef.gob.pe).\n\n4. **ACNUR.** (2023). *Migrantes y refugiados venezolanos: Barreras legales y sociales*. Recuperado de [https://www.acnur.org](https://www.acnur.org).\n\n5. **Távarez, R., & Alcázar, R.** (2023). *Obstáculos para la validación de títulos profesionales en migrantes venezolanos*. Publicado en la Revista de Estudios Sociales, 35(2), 102–115.\n:::\n"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","page-layout":"custom","title":"Factores asociados al estado de actividad laboral en refugiados y migrantes venezolanos en el Perú: Un enfoque predictivo utilizando Machine Learning","logo":"logo.png","theme":["litera","custom.scss"],"orientation":"columns"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}